{
  "compilerOptions": {
    // Target ECMAScript version for the compiled JavaScript output. ES2017 is a good balance for modern browsers.
    "target": "ES2017",
    // List of library files to be included in the compilation.
    // "dom": Browser DOM typings.
    // "dom.iterable": Typings for DOM iterables (like NodeList).
    // "esnext": Latest ECMAScript features.
    "lib": ["dom", "dom.iterable", "esnext"],
    // Allow JavaScript files to be compiled alongside TypeScript files.
    "allowJs": true,
    // Skip type checking of all declaration files (*.d.ts). Useful for avoiding issues with third-party library typings.
    "skipLibCheck": true,
    // Enable all strict type-checking options (e.g., noImplicitAny, strictNullChecks). Recommended for catching errors early.
    "strict": true,
    // Do not emit compiler output files (like .js, .d.ts). Next.js handles the build process.
    "noEmit": true,
    // Enables interoperability between CommonJS and ES Modules. Allows default imports from CommonJS modules.
    "esModuleInterop": true,
    // Specify module code generation strategy. "esnext" allows using modern module features.
    "module": "esnext",
    // Specifies how modules get resolved. "bundler" mimics bundler behavior (like Webpack/Next.js). Recommended for modern apps.
    "moduleResolution": "bundler",
    // Allow importing .json files as modules.
    "resolveJsonModule": true,
    // Ensure that each file can be safely transpiled without relying on other imports. Required by some tools like Babel.
    "isolatedModules": true,
    // Specify JSX code generation: "preserve" keeps JSX as is for another transform step (like Next.js/Babel) to handle.
    "jsx": "preserve",
    // Enable incremental compilation, which can speed up subsequent builds by reusing information from the last compilation.
    "incremental": true,
    // Compiler plugins to enhance TypeScript functionality.
    "plugins": [
      {
        // Enables the Next.js plugin for TypeScript, providing features like path alias validation.
        "name": "next"
      }
    ],
    // Define path aliases for easier imports. Maps "@/*" to "./src/*".
    "paths": {
      "@/*": ["./src/*"]
      // TODO: Add other path aliases if needed for different directories.
    }
    // TODO: Review and potentially adjust other compiler options based on project needs (e.g., "forceConsistentCasingInFileNames", "noUnusedLocals").
  },
  // Specifies the files TypeScript should include in the compilation process.
  "include": [
    "next-env.d.ts", // Next.js environment type declarations.
    "**/*.ts", // All TypeScript files in the project.
    "**/*.tsx", // All TSX (React TypeScript) files in the project.
    ".next/types/**/*.ts" // Type declarations generated by Next.js.
  ],
  // Specifies directories and files to exclude from compilation.
  "exclude": [
    "node_modules" // Exclude the node_modules directory.
    // TODO: Add other directories or files to exclude if necessary (e.g., build outputs, test files if not using TS for tests).
  ]
}
